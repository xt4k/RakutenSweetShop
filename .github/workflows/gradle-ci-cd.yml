name: CI/CD Gradle Pipeline

on:
  push:
    branches:
      - main
      - qa
      - preprod
      - prod

jobs:
  # Job for QA Environment
  build-and-test-qa:
    if: github.ref == 'refs/heads/qa'
    runs-on: ubuntu-latest
    environment: qa # set environment
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set executable permissions for gradlew
        run: chmod +x ./gradlew

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: CLean with Gradle
        run: ./gradlew clean

      - name: Run tests
        env:
          ABC_DE: ${{ secrets.ABC_DE }}
          LT_USERNAME: ${{ secrets.LAMBDA_TEST_USERNAME }}
          LT_ACCESS_KEY: ${{ secrets.LAMBDA_TEST_ACCESS_KEY }}
        run: ./gradlew runWebRemoteTests
        continue-on-error: true
      - name: Generate Allure Report
        run: |
          allure generate ./build/allure-results --clean -o ./build/allure-report
          allure open ./build/allure-report
      - name: Upload Allure Report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: ./build/allure-report

  # Job for Preprod Environment
  build-and-test-preprod:
    if: github.ref == 'refs/heads/preprod'
    runs-on: ubuntu-latest
    environment: ppd
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Run tests
        env:
          LT_USERNAME: ${{ secrets.LAMBDA_TEST_USERNAME }}
          LT_ACCESS_KEY: ${{ secrets.LAMBDA_TEST_ACCESS_KEY }}
        run: ./gradlew runWebRemoteTests

      - name: Deploy to Preprod
        env:
          SERVER_URL: ${{ secrets.PREPROD_SERVER_URL }}
          USERNAME: ${{ secrets.PREPROD_USERNAME }}
          PASSWORD: ${{ secrets.PREPROD_PASSWORD }}
        run: |
          echo "Deploying to Preprod environment"
          # Add deployment commands for Preprod here

  # Job for Production Environment
  deploy-prod:
    if: github.ref == 'refs/heads/prod'
    runs-on: ubuntu-latest
    needs: [build-and-test-qa, build-and-test-preprod]
    environment: prod
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Run tests
        run: ./gradlew runWebTests

      - name: Deploy to Production
        env:
          SERVER_URL: ${{ secrets.PROD_SERVER_URL }}
          USERNAME: ${{ secrets.PROD_USERNAME }}
          PASSWORD: ${{ secrets.PROD_PASSWORD }}
        run: |
          echo "Deploying to Production environment!"
          # Add deployment commands for Production here
